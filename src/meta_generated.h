/**
 * THIS FILE IS AUTO GENERATED BY META.EXE
 *
 * It will contain auto generated code that then is appended to the main compilation.
 * Do not modify any code, it will be overwritten.
 */
#ifndef META_GENERATED_H
#define META_GENERATED_H

#include "core/typeinfo.h"
#include "game/command.h"

#define META_TYPE(type) META_TYPE_##type

#define TYPE_OF(type) (&META_TYPE_TABLE[META_TYPE(type)])

typedef enum meta_type {
    META_TYPE(add),
    META_TYPE(bool),
    META_TYPE(char),
    META_TYPE(console),
    META_TYPE(Console),
    META_TYPE(float),
    META_TYPE(clear),
    META_TYPE(int),
    META_TYPE(quit),
    META_TYPE(s8),
    META_TYPE(s16),
    META_TYPE(u8),
    META_TYPE(void),
    META_TYPE(u16),
    META_TYPE(s32),
    META_TYPE(u32),
    META_TYPE(s64),
    META_TYPE(u64),
} Meta_Type;

static Type_Info META_TYPE_TABLE[];

static Type_Info_Function_Argument META_TYPE_FUNCTION_ARGS[] = {
    { TYPE_OF(s64), STR_BUFFER("a") },
    { TYPE_OF(s64), STR_BUFFER("b") },
};

static Type_Info_Struct_Member META_TYPE_STRUCT_MEMBERS[] = {
    { TYPE_OF(s64), STR_BUFFER("speed"), 0 },
    { TYPE_OF(float), STR_BUFFER("open_percent"), 8 },
    { TYPE_OF(float), STR_BUFFER("full_open_percent"), 12 },
    { TYPE_OF(s64), STR_BUFFER("text_pad"), 16 },
};

static Type_Info META_TYPE_TABLE[] = {
    [META_TYPE(add)] = (Type_Info) { FUNCTION, STR_BUFFER("add"), 0, 0, .t_function = { TYPE_OF(s64), 2, &META_TYPE_FUNCTION_ARGS[0], STR_BUFFER("game/console.h") } },
    [META_TYPE(bool)] = (Type_Info) { BOOL, STR_BUFFER("bool"), 1, 1 },
    [META_TYPE(char)] = (Type_Info) { INTEGER, STR_BUFFER("char"), 1, 1, .t_integer = { 8, 0 } },
    [META_TYPE(console)] = (Type_Info) { STRUCT, STR_BUFFER("console"), 24, 8, .t_struct = { 4, &META_TYPE_STRUCT_MEMBERS[0] } },
    [META_TYPE(Console)] = (Type_Info) { TYPEDEF, STR_BUFFER("Console"), 24, 8, .t_typedef = { TYPE_OF(console) } },
    [META_TYPE(float)] = (Type_Info) { FLOAT, STR_BUFFER("float"), 4, 4, .t_float = { 32 } },
    [META_TYPE(clear)] = (Type_Info) { FUNCTION, STR_BUFFER("clear"), 0, 0, .t_function = { TYPE_OF(void), 0, &META_TYPE_FUNCTION_ARGS[2], STR_BUFFER("game/console.h") } },
    [META_TYPE(int)] = (Type_Info) { INTEGER, STR_BUFFER("int"), 4, 4, .t_integer = { 32, 1 } },
    [META_TYPE(quit)] = (Type_Info) { FUNCTION, STR_BUFFER("quit"), 0, 0, .t_function = { TYPE_OF(void), 0, &META_TYPE_FUNCTION_ARGS[2], STR_BUFFER("game/game.h") } },
    [META_TYPE(s8)] = (Type_Info) { INTEGER, STR_BUFFER("s8"), 1, 1, .t_integer = { 8, 1 } },
    [META_TYPE(s16)] = (Type_Info) { INTEGER, STR_BUFFER("s16"), 2, 2, .t_integer = { 16, 1 } },
    [META_TYPE(u8)] = (Type_Info) { INTEGER, STR_BUFFER("u8"), 1, 1, .t_integer = { 8, 0 } },
    [META_TYPE(void)] = (Type_Info) { VOID, STR_BUFFER("void"), 0, 0 },
    [META_TYPE(u16)] = (Type_Info) { INTEGER, STR_BUFFER("u16"), 2, 2, .t_integer = { 16, 0 } },
    [META_TYPE(s32)] = (Type_Info) { INTEGER, STR_BUFFER("s32"), 4, 4, .t_integer = { 32, 1 } },
    [META_TYPE(u32)] = (Type_Info) { INTEGER, STR_BUFFER("u32"), 4, 4, .t_integer = { 32, 0 } },
    [META_TYPE(s64)] = (Type_Info) { INTEGER, STR_BUFFER("s64"), 8, 8, .t_integer = { 64, 1 } },
    [META_TYPE(u64)] = (Type_Info) { INTEGER, STR_BUFFER("u64"), 8, 8, .t_integer = { 64, 0 } },
};


#include "game/console.h"
#include "game/game.h"

static void COMMAND_PREFIX(add)(Any *args, u32 args_length) {
    s64 _rvalue = add(*(s64*)args[0].data, *(s64*)args[1].data);

    args[0].type = TYPE_OF(s64);
    *(s64*)args[0].data = _rvalue;
}

static void COMMAND_PREFIX(clear)(Any *args, u32 args_length) {
    clear();

}

static void COMMAND_PREFIX(quit)(Any *args, u32 args_length) {
    quit();

}

static void register_all_commands() {
    command_register(TYPE_OF(add), COMMAND_PREFIX(add));
    command_register(TYPE_OF(clear), COMMAND_PREFIX(clear));
    command_register(TYPE_OF(quit), COMMAND_PREFIX(quit));
}

#endif
